#!/bin/bash

# Default values
DEFAULT_WSL_HOME_DIR="/tmp/"
DEFAULT_POWERSHELL_PATH="/mnt/c/Windows/System32/WindowsPowerShell/v1.0/powershell.exe"
DEFAULT_DNS_CONF="/etc/resolv.conf"

# Read input values
read -p "Enter WSL home directory (press Enter for default: ${DEFAULT_WSL_HOME_DIR}): " WSL_HOME_DIR
read -p "Enter PowerShell path (press Enter for default: ${DEFAULT_POWERSHELL_PATH}): " POWERSHELL_PATH
read -p "Enter DNS configuration path (press Enter for default: ${DEFAULT_DNS_CONF}): " DNS_CONF

# Use default values if input is empty
WSL_HOME_DIR="${WSL_HOME_DIR:-$DEFAULT_WSL_HOME_DIR}"
POWERSHELL_PATH="${POWERSHELL_PATH:-$DEFAULT_POWERSHELL_PATH}"
DNS_CONF="${DNS_CONF:-$DEFAULT_DNS_CONF}"

# Define the main function
function update_dns_config() {
  echo "[INFO] Getting current DNS servers, this takes a couple of seconds"
  sudo "$POWERSHELL_PATH" -Command '
$ErrorActionPreference="SilentlyContinue"
Get-NetAdapter -InterfaceDescription "Cisco AnyConnect*" | Get-DnsClientServerAddress | Select -ExpandProperty ServerAddresses
Get-NetAdapter | ?{-not ($_.InterfaceDescription -like "Cisco AnyConnect*") } | Get-DnsClientServerAddress | Select -ExpandProperty ServerAddresses
' |
    awk 'BEGIN { print "# Generated by vpn fix func on", strftime("%c"); print } { print "nameserver", $1 }' |
    tr -d '\r' >"${WSL_HOME_DIR}/resolv.conf"

  echo '[INFO] Applying DNS configuration'

  if [[ -f $DNS_CONF ]]; then
    sudo rm $DNS_CONF
  fi

  sudo mv "${WSL_HOME_DIR}/resolv.conf" $DNS_CONF
}

# Run the main function
update_dns_config

# Add to startup scripts
read -p "Do you want to add this script to startup scripts? (y/n): " ADD_TO_STARTUP

if [[ $ADD_TO_STARTUP =~ ^[Yy]$ ]]; then
  STARTUP_SCRIPT="${HOME}/wsl-startup.sh"

  # Check if the script exists, and if not, create it with a shebang
  if [[ ! -f $STARTUP_SCRIPT ]]; then
    echo "#!/bin/bash" >"$STARTUP_SCRIPT"
    chmod +x "$STARTUP_SCRIPT"
  fi

  # Add the update_dns_config function and call it in the startup script if not already present
  if ! grep -q "update_dns_config" "$STARTUP_SCRIPT"; then
    declare -f update_dns_config >>"$STARTUP_SCRIPT"
    echo "update_dns_config" >>"$STARTUP_SCRIPT"
    echo "Added DNS update script to ${STARTUP_SCRIPT}"
  fi

  # Add the startup script to .bashrc if not already present
  if ! grep -q "$STARTUP_SCRIPT" "${HOME}/.bashrc"; then
    echo "[[ -f ${STARTUP_SCRIPT} ]] && . ${STARTUP_SCRIPT}" >>"${HOME}/.bashrc"
    echo "Added startup script to .bashrc"
  fi
fi
